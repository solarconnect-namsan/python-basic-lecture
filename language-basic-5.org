* Python 기초 5: 총 정리 및 종합 활용

지금까지 아래와 같은 내용들을 살펴보았습니다.

 - 출력문: print
 - 변수 할당
 - 반복문: for
 - 조건문: if

그리고, 아래와 같은 자료형을 배웠습니다:

 - 상수형 자료형: 참/거짓
 - 숫자형 자료형: 정수, 소수
 - 시퀀스형 자료형: 리스트(list), 튜플(tuple)
 - 텍스트 시퀀스: 문자열
 - 바이트 시퀀스: 바이트 (bytes)
 - 컨테이너형 자료형: set, dict

그리고, 아래 내용들을 배웠습니다:

 - 파일 다루기: 파일에 쓰기, 파일에서 읽어오기
 - 함수
 - 클래스

또, 중간 중간 등장한 내용들도 있습니다

 - 웹에서 문서 가져오기: requests


** 퀴즈

우선, 여러분들이 지난 3일간의 내용을 잘 이해하고 있는지 점검해보기 위해, [[https://docs.google.com/forms/d/e/1FAIpQLScy4LJ_ufM7qo0tzDkNAFjhL-M8kkDqKB2CiIVCptcIRyE1UA/viewform][Python 기초 퀴즈]] 한번 풀어보세요.


** 1일차 리뷰

1일차에는 출력문, 변수 할당, 반복문, 조건문을 살펴봤습니다.

*** 출력문

출력문은 ~print()~ 함수를 사용했습니다. 간단하죠.

#+BEGIN_SRC python :exports both :results output
print('Hello')
#+END_SRC

#+RESULTS:
: Hello


*** 변수 할당

변수 할당은 ~=~ 기호를 사용합니다.

#+BEGIN_SRC python :exports both :results output
a = 10
a = a + 30
print(a)
#+END_SRC

#+RESULTS:
: 50


*** 반복문: for

반복문 중 ~for~ 문은 아래와 같이 사용합니다.

#+BEGIN_SRC python :exports both :results output
  for i in range(10):
      print(i)
#+END_SRC

~for~ 문의 얼개는 다음과 같습니다.

#+BEGIN_EXAMPLE
for var in B:
    반복할 동안 수행하고자 하는 명령들
#+END_EXAMPLE

~for~ 문은 조건에 의해 도중에 중단할 수도 있는데, ~break~ 명령을 사용합니다.

#+BEGIN_SRC python :exports both :results output
  for i in range(10):
      if i > 5:
          break
#+END_SRC


*** 조건문: if

조건문에는 ~if~ 문이 있으며, 아래와 같이 사용합니다.

#+BEGIN_SRC python :exports both :results output
  if condition:
      # condition이 참일 경우 수행할 구문들
      # condition이 참일 경우 수행할 구문들
#+END_SRC

~condition~ 부분에는 변수나 수식이 올 수 있으며, 참일 경우 하위 구문들을 수행합니다.

~if~ 문은 ~else~ 와 함께 사용할 수 있습니다.

#+BEGIN_SRC python :exports both :results output
  if condition:
      # condition이 참일 경우 수행할 구문들
      # condition이 참일 경우 수행할 구문들
  else:
      # condition이 거짓일 경우 수행할 구문들
#+END_SRC


** 2일차 리뷰

